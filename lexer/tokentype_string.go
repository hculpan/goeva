// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INTEGER-0]
	_ = x[FLOAT-1]
	_ = x[STRING-2]
	_ = x[PLUS-3]
	_ = x[MINUS-4]
	_ = x[TRUE-5]
	_ = x[FALSE-6]
	_ = x[IDENTIFIER-7]
	_ = x[STAR-8]
	_ = x[SLASH-9]
	_ = x[RIGHTPAREN-10]
	_ = x[LEFTPAREN-11]
}

const _TokenType_name = "INTEGERFLOATSTRINGPLUSMINUSTRUEFALSEIDENTIFIERSTARSLASHRIGHTPARENLEFTPAREN"

var _TokenType_index = [...]uint8{0, 7, 12, 18, 22, 27, 31, 36, 46, 50, 55, 65, 74}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
